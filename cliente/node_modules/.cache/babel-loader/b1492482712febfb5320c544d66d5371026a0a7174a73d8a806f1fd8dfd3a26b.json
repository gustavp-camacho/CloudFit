{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Windows 11\\\\Desktop\\\\CloudFit\\\\cliente\\\\src\\\\pages\\\\Usuarios\\\\componentes\\\\citas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './citas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppointmentBooking = () => {\n  _s();\n  var _employees$selectedSe, _employees$selectedSe2;\n  const [selectedService, setSelectedService] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedTime, setSelectedTime] = useState('');\n  const [selectedEmployee, setSelectedEmployee] = useState('');\n  const [appointments, setAppointments] = useState([]);\n  const [employees, setEmployees] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [loadingEmployees, setLoadingEmployees] = useState(false);\n  const [checkingAvailability, setCheckingAvailability] = useState(false);\n  const services = [{\n    id: 'barbero',\n    name: 'Servicio de Barbería',\n    icon: '✂️',\n    duration: 30\n  }, {\n    id: 'estilista',\n    name: 'Servicio de Estilista',\n    icon: '💇',\n    duration: 45\n  }, {\n    id: 'coach',\n    name: 'Entrenamiento Personal',\n    icon: '🏋️',\n    duration: 60\n  }];\n  const timeSlots = ['08:00', '08:30', '09:00', '09:30', '10:00', '10:30', '11:00', '11:30', '12:00', '12:30', '13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30', '17:00', '17:30', '18:00', '18:30', '19:00', '19:30'];\n\n  // Cargar datos al iniciar\n  useEffect(() => {\n    fetchEmployees();\n    fetchAppointments();\n  }, []);\n\n  // Limpiar mensajes después de 5 segundos\n  useEffect(() => {\n    if (success || error) {\n      const timer = setTimeout(() => {\n        setSuccess('');\n        setError('');\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [success, error]);\n  const fetchEmployees = async () => {\n    try {\n      setLoadingEmployees(true);\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/api/empleados/all', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      if (response.ok && data.success) {\n        // Organizar empleados por posición\n        const employeesByPosition = {\n          barbero: [],\n          estilista: [],\n          coach: []\n        };\n        data.employees.forEach(employee => {\n          const position = employee.position.toLowerCase();\n          if (employeesByPosition[position]) {\n            employeesByPosition[position].push({\n              id: employee.employeeId,\n              name: employee.username,\n              specialty: getSpecialtyByPosition(employee.position),\n              rating: generateRating(),\n              // Generar rating aleatorio por ahora\n              position: employee.position,\n              phone: employee.phone,\n              email: employee.email,\n              status: employee.status\n            });\n          }\n        });\n        setEmployees(employeesByPosition);\n      } else {\n        setError('Error al cargar empleados');\n      }\n    } catch (error) {\n      console.error('Error fetching employees:', error);\n      setError('Error de conexión al cargar empleados');\n    } finally {\n      setLoadingEmployees(false);\n    }\n  };\n  const fetchAppointments = async () => {\n    try {\n      setLoading(true);\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/api/citas/my-appointments', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      if (response.ok && data.success) {\n        setAppointments(data.appointments || []);\n      } else {\n        console.error('Error al cargar citas:', data.message);\n      }\n    } catch (error) {\n      console.error('Error fetching appointments:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const checkTimeSlotAvailability = async (date, time, employeeId) => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:5000/api/citas/check-availability?date=${date}&time=${time}&employeeId=${employeeId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      return response.ok && data.success ? data.available : false;\n    } catch (error) {\n      console.error('Error checking availability:', error);\n      return false;\n    }\n  };\n  const getSpecialtyByPosition = position => {\n    const specialties = {\n      'Barbero': ['Cortes clásicos', 'Barba y bigote', 'Cortes modernos'][Math.floor(Math.random() * 3)],\n      'Estilista': ['Cortes modernos', 'Coloración', 'Peinados especiales'][Math.floor(Math.random() * 3)],\n      'Coach': ['Fuerza y resistencia', 'Cardio y pérdida de peso', 'Rehabilitación'][Math.floor(Math.random() * 3)]\n    };\n    return specialties[position] || 'Servicio general';\n  };\n  const generateRating = () => {\n    return (4.5 + Math.random() * 0.5).toFixed(1);\n  };\n\n  // Generar próximos 14 días\n  const getAvailableDates = () => {\n    const dates = [];\n    const today = new Date();\n    for (let i = 0; i < 14; i++) {\n      const date = new Date(today);\n      date.setDate(today.getDate() + i);\n      dates.push(date.toISOString().split('T')[0]);\n    }\n    return dates;\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('es-ES', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n  const isTimeSlotAvailable = time => {\n    if (!selectedDate || !selectedEmployee) return true;\n\n    // Verificar en citas locales primero\n    return !appointments.some(appointment => appointment.date === selectedDate && appointment.time === time && appointment.employee.employeeId === selectedEmployee);\n  };\n  const handleBookAppointment = async () => {\n    if (!selectedService || !selectedDate || !selectedTime || !selectedEmployee) {\n      setError('Por favor, completa todos los campos');\n      return;\n    }\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n\n      // Verificar disponibilidad una vez más antes de agendar\n      const isAvailable = await checkTimeSlotAvailability(selectedDate, selectedTime, selectedEmployee);\n      if (!isAvailable) {\n        setError('El horario seleccionado ya no está disponible');\n        return;\n      }\n      const service = services.find(s => s.id === selectedService);\n      const employee = employees[selectedService].find(e => e.id === selectedEmployee);\n      const appointmentData = {\n        serviceType: selectedService,\n        serviceName: service.name,\n        serviceDuration: service.duration,\n        employeeId: selectedEmployee,\n        date: selectedDate,\n        time: selectedTime,\n        notes: ''\n      };\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/api/citas/book', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(appointmentData)\n      });\n      const data = await response.json();\n      if (response.ok && data.success) {\n        setSuccess('¡Cita agendada exitosamente!');\n\n        // Recargar citas\n        await fetchAppointments();\n\n        // Limpiar formulario\n        setSelectedService('');\n        setSelectedDate('');\n        setSelectedTime('');\n        setSelectedEmployee('');\n      } else {\n        setError(data.message || 'Error al agendar la cita');\n      }\n    } catch (error) {\n      console.error('Error booking appointment:', error);\n      setError('Error de conexión al agendar la cita');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const cancelAppointment = async appointmentId => {\n    if (!window.confirm('¿Estás seguro de que quieres cancelar esta cita?')) {\n      return;\n    }\n    try {\n      setLoading(true);\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:5000/api/citas/appointment/${appointmentId}/cancel`, {\n        method: 'PATCH',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      if (response.ok && data.success) {\n        setSuccess('Cita cancelada exitosamente');\n        await fetchAppointments();\n      } else {\n        setError(data.message || 'Error al cancelar la cita');\n      }\n    } catch (error) {\n      console.error('Error canceling appointment:', error);\n      setError('Error de conexión al cancelar la cita');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getStatusDisplay = status => {\n    const statusMap = {\n      'pending': 'Pendiente',\n      'confirmed': 'Confirmada',\n      'cancelled': 'Cancelada',\n      'completed': 'Completada'\n    };\n    return statusMap[status] || status;\n  };\n  const getStatusClass = status => {\n    const classMap = {\n      'pending': 'pending',\n      'confirmed': 'confirmed',\n      'cancelled': 'cancelled',\n      'completed': 'completed'\n    };\n    return classMap[status] || 'pending';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appointment-booking\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"booking-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDCC5 Agendar Citas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"global-error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"global-success-message\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"booking-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"booking-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Nueva Cita\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Selecciona el servicio:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"service-options\",\n            children: services.map(service => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `service-card ${selectedService === service.id ? 'selected' : ''}`,\n              onClick: () => {\n                setSelectedService(service.id);\n                setSelectedEmployee(''); // Reset employee selection\n                setSelectedDate(''); // Reset date selection\n                setSelectedTime(''); // Reset time selection\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"service-icon\",\n                children: service.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: service.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"service-duration\",\n                children: [service.duration, \" min\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 19\n              }, this)]\n            }, service.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), selectedService && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Selecciona el profesional:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this), loadingEmployees ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-employees\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Cargando profesionales...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }, this) : ((_employees$selectedSe = employees[selectedService]) === null || _employees$selectedSe === void 0 ? void 0 : _employees$selectedSe.length) === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-employees\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No hay profesionales disponibles para este servicio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"employee-options\",\n            children: ((_employees$selectedSe2 = employees[selectedService]) === null || _employees$selectedSe2 === void 0 ? void 0 : _employees$selectedSe2.map(employee => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `employee-card ${selectedEmployee === employee.id ? 'selected' : ''} ${employee.status !== 'active' ? 'unavailable' : ''}`,\n              onClick: () => {\n                if (employee.status === 'active') {\n                  setSelectedEmployee(employee.id);\n                  setSelectedDate(''); // Reset date selection\n                  setSelectedTime(''); // Reset time selection\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"employee-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: employee.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"specialty\",\n                  children: employee.specialty\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"rating\",\n                  children: [\"\\u2B50 \", employee.rating]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 25\n                }, this), employee.status !== 'active' && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"unavailable-label\",\n                  children: \"No disponible\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 23\n              }, this)\n            }, employee.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 21\n            }, this))) || []\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this), selectedEmployee && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Selecciona la fecha:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date-options\",\n            children: getAvailableDates().map(date => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `date-btn ${selectedDate === date ? 'selected' : ''}`,\n              onClick: () => {\n                setSelectedDate(date);\n                setSelectedTime(''); // Reset time selection\n              },\n              children: formatDate(date)\n            }, date, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }, this), selectedDate && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Selecciona la hora:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-options\",\n            children: timeSlots.map(time => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `time-btn ${selectedTime === time ? 'selected' : ''} ${!isTimeSlotAvailable(time) ? 'unavailable' : ''}`,\n              onClick: () => setSelectedTime(time),\n              disabled: !isTimeSlotAvailable(time),\n              children: time\n            }, time, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this), selectedService && selectedEmployee && selectedDate && selectedTime && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"confirm-btn\",\n            onClick: handleBookAppointment,\n            disabled: loading,\n            children: loading ? 'Agendando...' : 'Confirmar Cita'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"appointments-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Mis Citas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this), loading && appointments.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-appointments\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Cargando citas...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this) : appointments.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-appointments\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No tienes citas agendadas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"appointments\",\n          children: appointments.map(appointment => {\n            var _services$find, _appointment$employee, _appointment$employee2;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"appointment-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"appointment-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"service-icon\",\n                  children: ((_services$find = services.find(s => s.id === appointment.serviceType)) === null || _services$find === void 0 ? void 0 : _services$find.icon) || '📅'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"appointment-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: appointment.serviceName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 461,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"employee-name\",\n                    children: [\"con \", ((_appointment$employee = appointment.employee) === null || _appointment$employee === void 0 ? void 0 : _appointment$employee.name) || 'Profesional']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 462,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 21\n                }, this), (appointment.status === 'pending' || appointment.status === 'confirmed') && /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cancel-btn\",\n                  onClick: () => cancelAppointment(appointment._id || appointment.id),\n                  disabled: loading,\n                  children: \"\\u2715\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"appointment-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"detail-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"detail-label\",\n                    children: \"Fecha:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 477,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"detail-value\",\n                    children: formatDate(appointment.date)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 478,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"detail-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"detail-label\",\n                    children: \"Hora:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 481,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"detail-value\",\n                    children: appointment.time\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 482,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"detail-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"detail-label\",\n                    children: \"Duraci\\xF3n:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 485,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"detail-value\",\n                    children: [appointment.serviceDuration, \" min\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 486,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"detail-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"detail-label\",\n                    children: \"Estado:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 489,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `status ${getStatusClass(appointment.status)}`,\n                    children: getStatusDisplay(appointment.status)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 490,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 21\n                }, this), ((_appointment$employee2 = appointment.employee) === null || _appointment$employee2 === void 0 ? void 0 : _appointment$employee2.phone) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"detail-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"detail-label\",\n                    children: \"Contacto:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"detail-value\",\n                    children: appointment.employee.phone\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 497,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 23\n                }, this), appointment.notes && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"detail-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"detail-label\",\n                    children: \"Notas:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 502,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"detail-value\",\n                    children: appointment.notes\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 503,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 501,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 19\n              }, this)]\n            }, appointment._id || appointment.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 5\n  }, this);\n};\n_s(AppointmentBooking, \"XmLAOFlEmUyH9Kl277GZOibHHKs=\");\n_c = AppointmentBooking;\nexport default AppointmentBooking;\nvar _c;\n$RefreshReg$(_c, \"AppointmentBooking\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AppointmentBooking","_s","_employees$selectedSe","_employees$selectedSe2","selectedService","setSelectedService","selectedDate","setSelectedDate","selectedTime","setSelectedTime","selectedEmployee","setSelectedEmployee","appointments","setAppointments","employees","setEmployees","loading","setLoading","error","setError","success","setSuccess","loadingEmployees","setLoadingEmployees","checkingAvailability","setCheckingAvailability","services","id","name","icon","duration","timeSlots","fetchEmployees","fetchAppointments","timer","setTimeout","clearTimeout","token","localStorage","getItem","response","fetch","headers","data","json","ok","employeesByPosition","barbero","estilista","coach","forEach","employee","position","toLowerCase","push","employeeId","username","specialty","getSpecialtyByPosition","rating","generateRating","phone","email","status","console","message","checkTimeSlotAvailability","date","time","available","specialties","Math","floor","random","toFixed","getAvailableDates","dates","today","Date","i","setDate","getDate","toISOString","split","formatDate","dateString","toLocaleDateString","weekday","year","month","day","isTimeSlotAvailable","some","appointment","handleBookAppointment","isAvailable","service","find","s","e","appointmentData","serviceType","serviceName","serviceDuration","notes","method","body","JSON","stringify","cancelAppointment","appointmentId","window","confirm","getStatusDisplay","statusMap","getStatusClass","classMap","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","length","disabled","_services$find","_appointment$employee","_appointment$employee2","_id","_c","$RefreshReg$"],"sources":["C:/Users/Windows 11/Desktop/CloudFit/cliente/src/pages/Usuarios/componentes/citas.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './citas.css';\r\n\r\nconst AppointmentBooking = () => {\r\n  const [selectedService, setSelectedService] = useState('');\r\n  const [selectedDate, setSelectedDate] = useState('');\r\n  const [selectedTime, setSelectedTime] = useState('');\r\n  const [selectedEmployee, setSelectedEmployee] = useState('');\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [employees, setEmployees] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [loadingEmployees, setLoadingEmployees] = useState(false);\r\n  const [checkingAvailability, setCheckingAvailability] = useState(false);\r\n\r\n  const services = [\r\n    { id: 'barbero', name: 'Servicio de Barbería', icon: '✂️', duration: 30 },\r\n    { id: 'estilista', name: 'Servicio de Estilista', icon: '💇', duration: 45 },\r\n    { id: 'coach', name: 'Entrenamiento Personal', icon: '🏋️', duration: 60 }\r\n  ];\r\n\r\n  const timeSlots = [\r\n    '08:00', '08:30', '09:00', '09:30', '10:00', '10:30',\r\n    '11:00', '11:30', '12:00', '12:30', '13:00', '13:30',\r\n    '14:00', '14:30', '15:00', '15:30', '16:00', '16:30',\r\n    '17:00', '17:30', '18:00', '18:30', '19:00', '19:30'\r\n  ];\r\n\r\n  // Cargar datos al iniciar\r\n  useEffect(() => {\r\n    fetchEmployees();\r\n    fetchAppointments();\r\n  }, []);\r\n\r\n  // Limpiar mensajes después de 5 segundos\r\n  useEffect(() => {\r\n    if (success || error) {\r\n      const timer = setTimeout(() => {\r\n        setSuccess('');\r\n        setError('');\r\n      }, 5000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [success, error]);\r\n\r\n  const fetchEmployees = async () => {\r\n    try {\r\n      setLoadingEmployees(true);\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/api/empleados/all', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (response.ok && data.success) {\r\n        // Organizar empleados por posición\r\n        const employeesByPosition = {\r\n          barbero: [],\r\n          estilista: [],\r\n          coach: []\r\n        };\r\n\r\n        data.employees.forEach(employee => {\r\n          const position = employee.position.toLowerCase();\r\n          if (employeesByPosition[position]) {\r\n            employeesByPosition[position].push({\r\n              id: employee.employeeId,\r\n              name: employee.username,\r\n              specialty: getSpecialtyByPosition(employee.position),\r\n              rating: generateRating(), // Generar rating aleatorio por ahora\r\n              position: employee.position,\r\n              phone: employee.phone,\r\n              email: employee.email,\r\n              status: employee.status\r\n            });\r\n          }\r\n        });\r\n\r\n        setEmployees(employeesByPosition);\r\n      } else {\r\n        setError('Error al cargar empleados');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching employees:', error);\r\n      setError('Error de conexión al cargar empleados');\r\n    } finally {\r\n      setLoadingEmployees(false);\r\n    }\r\n  };\r\n\r\n  const fetchAppointments = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/api/citas/my-appointments', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (response.ok && data.success) {\r\n        setAppointments(data.appointments || []);\r\n      } else {\r\n        console.error('Error al cargar citas:', data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching appointments:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const checkTimeSlotAvailability = async (date, time, employeeId) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/citas/check-availability?date=${date}&time=${time}&employeeId=${employeeId}`,\r\n        {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        }\r\n      );\r\n      \r\n      const data = await response.json();\r\n      return response.ok && data.success ? data.available : false;\r\n    } catch (error) {\r\n      console.error('Error checking availability:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const getSpecialtyByPosition = (position) => {\r\n    const specialties = {\r\n      'Barbero': ['Cortes clásicos', 'Barba y bigote', 'Cortes modernos'][Math.floor(Math.random() * 3)],\r\n      'Estilista': ['Cortes modernos', 'Coloración', 'Peinados especiales'][Math.floor(Math.random() * 3)],\r\n      'Coach': ['Fuerza y resistencia', 'Cardio y pérdida de peso', 'Rehabilitación'][Math.floor(Math.random() * 3)]\r\n    };\r\n    return specialties[position] || 'Servicio general';\r\n  };\r\n\r\n  const generateRating = () => {\r\n    return (4.5 + Math.random() * 0.5).toFixed(1);\r\n  };\r\n\r\n  // Generar próximos 14 días\r\n  const getAvailableDates = () => {\r\n    const dates = [];\r\n    const today = new Date();\r\n    for (let i = 0; i < 14; i++) {\r\n      const date = new Date(today);\r\n      date.setDate(today.getDate() + i);\r\n      dates.push(date.toISOString().split('T')[0]);\r\n    }\r\n    return dates;\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('es-ES', {\r\n      weekday: 'long',\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric'\r\n    });\r\n  };\r\n\r\n  const isTimeSlotAvailable = (time) => {\r\n    if (!selectedDate || !selectedEmployee) return true;\r\n    \r\n    // Verificar en citas locales primero\r\n    return !appointments.some(appointment => \r\n      appointment.date === selectedDate &&\r\n      appointment.time === time &&\r\n      appointment.employee.employeeId === selectedEmployee\r\n    );\r\n  };\r\n\r\n  const handleBookAppointment = async () => {\r\n    if (!selectedService || !selectedDate || !selectedTime || !selectedEmployee) {\r\n      setError('Por favor, completa todos los campos');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      setSuccess('');\r\n\r\n      // Verificar disponibilidad una vez más antes de agendar\r\n      const isAvailable = await checkTimeSlotAvailability(selectedDate, selectedTime, selectedEmployee);\r\n      if (!isAvailable) {\r\n        setError('El horario seleccionado ya no está disponible');\r\n        return;\r\n      }\r\n\r\n      const service = services.find(s => s.id === selectedService);\r\n      const employee = employees[selectedService].find(e => e.id === selectedEmployee);\r\n\r\n      const appointmentData = {\r\n        serviceType: selectedService,\r\n        serviceName: service.name,\r\n        serviceDuration: service.duration,\r\n        employeeId: selectedEmployee,\r\n        date: selectedDate,\r\n        time: selectedTime,\r\n        notes: ''\r\n      };\r\n\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/api/citas/book', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(appointmentData)\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok && data.success) {\r\n        setSuccess('¡Cita agendada exitosamente!');\r\n        \r\n        // Recargar citas\r\n        await fetchAppointments();\r\n        \r\n        // Limpiar formulario\r\n        setSelectedService('');\r\n        setSelectedDate('');\r\n        setSelectedTime('');\r\n        setSelectedEmployee('');\r\n      } else {\r\n        setError(data.message || 'Error al agendar la cita');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error booking appointment:', error);\r\n      setError('Error de conexión al agendar la cita');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const cancelAppointment = async (appointmentId) => {\r\n    if (!window.confirm('¿Estás seguro de que quieres cancelar esta cita?')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch(`http://localhost:5000/api/citas/appointment/${appointmentId}/cancel`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok && data.success) {\r\n        setSuccess('Cita cancelada exitosamente');\r\n        await fetchAppointments();\r\n      } else {\r\n        setError(data.message || 'Error al cancelar la cita');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error canceling appointment:', error);\r\n      setError('Error de conexión al cancelar la cita');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getStatusDisplay = (status) => {\r\n    const statusMap = {\r\n      'pending': 'Pendiente',\r\n      'confirmed': 'Confirmada',\r\n      'cancelled': 'Cancelada',\r\n      'completed': 'Completada'\r\n    };\r\n    return statusMap[status] || status;\r\n  };\r\n\r\n  const getStatusClass = (status) => {\r\n    const classMap = {\r\n      'pending': 'pending',\r\n      'confirmed': 'confirmed',\r\n      'cancelled': 'cancelled',\r\n      'completed': 'completed'\r\n    };\r\n    return classMap[status] || 'pending';\r\n  };\r\n\r\n  return (\r\n    <div className=\"appointment-booking\">\r\n      <div className=\"booking-header\">\r\n        <h2>📅 Agendar Citas</h2>\r\n      </div>\r\n\r\n      {/* Mostrar mensajes globales */}\r\n      {error && <div className=\"global-error-message\">{error}</div>}\r\n      {success && <div className=\"global-success-message\">{success}</div>}\r\n\r\n      <div className=\"booking-content\">\r\n        <div className=\"booking-form\">\r\n          <h3>Nueva Cita</h3>\r\n          \r\n          {/* Selección de servicio */}\r\n          <div className=\"form-section\">\r\n            <label>Selecciona el servicio:</label>\r\n            <div className=\"service-options\">\r\n              {services.map(service => (\r\n                <div\r\n                  key={service.id}\r\n                  className={`service-card ${selectedService === service.id ? 'selected' : ''}`}\r\n                  onClick={() => {\r\n                    setSelectedService(service.id);\r\n                    setSelectedEmployee(''); // Reset employee selection\r\n                    setSelectedDate(''); // Reset date selection\r\n                    setSelectedTime(''); // Reset time selection\r\n                  }}\r\n                >\r\n                  <span className=\"service-icon\">{service.icon}</span>\r\n                  <h4>{service.name}</h4>\r\n                  <span className=\"service-duration\">{service.duration} min</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Selección de empleado */}\r\n          {selectedService && (\r\n            <div className=\"form-section\">\r\n              <label>Selecciona el profesional:</label>\r\n              {loadingEmployees ? (\r\n                <div className=\"loading-employees\">\r\n                  <div className=\"spinner\"></div>\r\n                  <p>Cargando profesionales...</p>\r\n                </div>\r\n              ) : employees[selectedService]?.length === 0 ? (\r\n                <div className=\"no-employees\">\r\n                  <p>No hay profesionales disponibles para este servicio</p>\r\n                </div>\r\n              ) : (\r\n                <div className=\"employee-options\">\r\n                  {employees[selectedService]?.map(employee => (\r\n                    <div\r\n                      key={employee.id}\r\n                      className={`employee-card ${selectedEmployee === employee.id ? 'selected' : ''} ${employee.status !== 'active' ? 'unavailable' : ''}`}\r\n                      onClick={() => {\r\n                        if (employee.status === 'active') {\r\n                          setSelectedEmployee(employee.id);\r\n                          setSelectedDate(''); // Reset date selection\r\n                          setSelectedTime(''); // Reset time selection\r\n                        }\r\n                      }}\r\n                    >\r\n                      <div className=\"employee-info\">\r\n                        <h4>{employee.name}</h4>\r\n                        <span className=\"specialty\">{employee.specialty}</span>\r\n                        <div className=\"rating\">\r\n                          ⭐ {employee.rating}\r\n                        </div>\r\n                        {employee.status !== 'active' && (\r\n                          <span className=\"unavailable-label\">No disponible</span>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  )) || []}\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {/* Selección de fecha */}\r\n          {selectedEmployee && (\r\n            <div className=\"form-section\">\r\n              <label>Selecciona la fecha:</label>\r\n              <div className=\"date-options\">\r\n                {getAvailableDates().map(date => (\r\n                  <button\r\n                    key={date}\r\n                    className={`date-btn ${selectedDate === date ? 'selected' : ''}`}\r\n                    onClick={() => {\r\n                      setSelectedDate(date);\r\n                      setSelectedTime(''); // Reset time selection\r\n                    }}\r\n                  >\r\n                    {formatDate(date)}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Selección de hora */}\r\n          {selectedDate && (\r\n            <div className=\"form-section\">\r\n              <label>Selecciona la hora:</label>\r\n              <div className=\"time-options\">\r\n                {timeSlots.map(time => (\r\n                  <button\r\n                    key={time}\r\n                    className={`time-btn ${selectedTime === time ? 'selected' : ''} ${!isTimeSlotAvailable(time) ? 'unavailable' : ''}`}\r\n                    onClick={() => setSelectedTime(time)}\r\n                    disabled={!isTimeSlotAvailable(time)}\r\n                  >\r\n                    {time}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Botón de confirmar */}\r\n          {selectedService && selectedEmployee && selectedDate && selectedTime && (\r\n            <div className=\"form-section\">\r\n              <button \r\n                className=\"confirm-btn\" \r\n                onClick={handleBookAppointment}\r\n                disabled={loading}\r\n              >\r\n                {loading ? 'Agendando...' : 'Confirmar Cita'}\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Lista de citas */}\r\n        <div className=\"appointments-list\">\r\n          <h3>Mis Citas</h3>\r\n          {loading && appointments.length === 0 ? (\r\n            <div className=\"loading-appointments\">\r\n              <div className=\"spinner\"></div>\r\n              <p>Cargando citas...</p>\r\n            </div>\r\n          ) : appointments.length === 0 ? (\r\n            <div className=\"no-appointments\">\r\n              <p>No tienes citas agendadas</p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"appointments\">\r\n              {appointments.map(appointment => (\r\n                <div key={appointment._id || appointment.id} className=\"appointment-card\">\r\n                  <div className=\"appointment-header\">\r\n                    <span className=\"service-icon\">\r\n                      {services.find(s => s.id === appointment.serviceType)?.icon || '📅'}\r\n                    </span>\r\n                    <div className=\"appointment-info\">\r\n                      <h4>{appointment.serviceName}</h4>\r\n                      <span className=\"employee-name\">con {appointment.employee?.name || 'Profesional'}</span>\r\n                    </div>\r\n                    {(appointment.status === 'pending' || appointment.status === 'confirmed') && (\r\n                      <button \r\n                        className=\"cancel-btn\"\r\n                        onClick={() => cancelAppointment(appointment._id || appointment.id)}\r\n                        disabled={loading}\r\n                      >\r\n                        ✕\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                  \r\n                  <div className=\"appointment-details\">\r\n                    <div className=\"detail-item\">\r\n                      <span className=\"detail-label\">Fecha:</span>\r\n                      <span className=\"detail-value\">{formatDate(appointment.date)}</span>\r\n                    </div>\r\n                    <div className=\"detail-item\">\r\n                      <span className=\"detail-label\">Hora:</span>\r\n                      <span className=\"detail-value\">{appointment.time}</span>\r\n                    </div>\r\n                    <div className=\"detail-item\">\r\n                      <span className=\"detail-label\">Duración:</span>\r\n                      <span className=\"detail-value\">{appointment.serviceDuration} min</span>\r\n                    </div>\r\n                    <div className=\"detail-item\">\r\n                      <span className=\"detail-label\">Estado:</span>\r\n                      <span className={`status ${getStatusClass(appointment.status)}`}>\r\n                        {getStatusDisplay(appointment.status)}\r\n                      </span>\r\n                    </div>\r\n                    {appointment.employee?.phone && (\r\n                      <div className=\"detail-item\">\r\n                        <span className=\"detail-label\">Contacto:</span>\r\n                        <span className=\"detail-value\">{appointment.employee.phone}</span>\r\n                      </div>\r\n                    )}\r\n                    {appointment.notes && (\r\n                      <div className=\"detail-item\">\r\n                        <span className=\"detail-label\">Notas:</span>\r\n                        <span className=\"detail-value\">{appointment.notes}</span>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppointmentBooking;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}